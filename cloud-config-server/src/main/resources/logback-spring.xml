<?xml version="1.0" encoding="UTF-8"?>

<configuration>

    <jmxConfigurator/>
    <!--日志彩色打印-->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>


    <!--使用spring application.yml 变量-->
    <springProperty scope="context" name="LOG_PATH" source="logging.path"
                    defaultValue="logs/"/>
    <springProperty scope="context" name="ROOT_LOG_LEVEL" source="logging.level.root"
                    defaultValue="info"/>
    <springProperty scope="context" name="APPLICTION_NAME" source="spring.application.name"
                    defaultValue="app"/>

    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />
    <property name="LOG_PATTERN"
              value="[%d{'yyyy-MM-dd HH:mm:ss.SSS',GMT+8:00}] %-5p [%logger{36}][%L] %X{UUID} %X{USER}: %m%n"/>
    <property name="LOG_CHARSET" value="UTF-8"/>

    <property name="COMMON_LOG" value="${LOG_PATH}/${APPLICTION_NAME}"/>
    <property name="ERROR_LOG" value="${LOG_PATH}/${APPLICTION_NAME}"/>
    <!-- 日志会保存180天，最大占用30GB，根据项目实际情况调整 -->
    <property name="MAX_HISTORY" value="30"/>
    <property name="MAX_FILE_SIZE" value="20MB"/>
    <property name="TOTAL_SIZE_CAP" value="30GB"/>

    <!-- Console 输出设置 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>${LOG_CHARSET}</charset>
        </encoder>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="COMMON_LOG_FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <!--日志文件输出的文件名-->
        <file>${COMMON_LOG}/common.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>


        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <fileNamePattern>${COMMON_LOG}/%d{yyyy-MM-dd}/%i.common.log</fileNamePattern>
            <!--日志文件最大的大小-->
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <!--日志文件保留天数-->
            <MaxHistory>${MAX_HISTORY}</MaxHistory>

            <totalSizeCap>${TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
    </appender>

    <appender name="ERROR_LOG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <file>${ERROR_LOG}/error.log</file>

        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${ERROR_LOG}/%d{yyyy-MM-dd}/%i.error.log</fileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <totalSizeCap>${TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
        <!-- 下面为配置只输出error级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- show parameters for hibernate sql 专为 Hibernate 定制 -->
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder"  level="TRACE" />
    <logger name="org.hibernate.type.descriptor.sql.BasicExtractor"  level="DEBUG" />
    <logger name="org.hibernate.SQL" level="DEBUG" />
    <logger name="org.hibernate.engine.QueryParameters" level="DEBUG" />
    <logger name="org.hibernate.engine.query.HQLQueryPlan" level="DEBUG" />

    <!--myibatis log configure-->
    <logger name="com.apache.ibatis" level="TRACE"/>
    <logger name="java.sql.Connection" level="DEBUG"/>
    <logger name="java.sql.Statement" level="DEBUG"/>
    <logger name="java.sql.PreparedStatement" level="DEBUG"/>
    <logger name="org.apache.commons"      level="ERROR" />
    <logger name="org.apache.zookeeper"    level="ERROR"  />
    <logger name="com.alibaba.dubbo.monitor" level="ERROR"/>
    <logger name="com.alibaba.dubbo.remoting" level="ERROR" />
    <!-- spring框架日志 warn才输出 -->
    <logger name="org.springframework" level="WARN"/>

    <!-- 只有环境是dev或者test的时候才会打印日志到控制台，其余打印到common和error日志文件中 -->
    <root level="${ROOT_LOG_LEVEL}">
        <appender-ref ref="COMMON_LOG_FILE"/>
        <appender-ref ref="ERROR_LOG_FILE"/>
        <!-- 环境配置,使用Spring Boot Logback扩展，多个不同环境使用逗号隔开 -->
        <springProfile name="dev">
                  <appender-ref ref="CONSOLE"/>
        </springProfile>
    </root>
</configuration>